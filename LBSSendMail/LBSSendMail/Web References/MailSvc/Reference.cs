//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace LBSSendMail.MailSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://cfag.port.com/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GeterrMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailAttachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailDelayOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOptionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::LBSSendMail.Properties.Settings.Default.LBSSendMail_MailSvc_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GeterrMsgCompletedEventHandler GeterrMsgCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event SendMailAttachedCompletedEventHandler SendMailAttachedCompleted;
        
        /// <remarks/>
        public event SendMailDelayCompletedEventHandler SendMailDelayCompleted;
        
        /// <remarks/>
        public event QueryMailInfoCompletedEventHandler QueryMailInfoCompleted;
        
        /// <remarks/>
        public event SendMailWithOptionsCompletedEventHandler SendMailWithOptionsCompleted;
        
        /// <remarks/>
        public event TestOptionsCompletedEventHandler TestOptionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/GeterrMsg", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GeterrMsg() {
            object[] results = this.Invoke("GeterrMsg", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeterrMsgAsync() {
            this.GeterrMsgAsync(null);
        }
        
        /// <remarks/>
        public void GeterrMsgAsync(object userState) {
            if ((this.GeterrMsgOperationCompleted == null)) {
                this.GeterrMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeterrMsgOperationCompleted);
            }
            this.InvokeAsync("GeterrMsg", new object[0], this.GeterrMsgOperationCompleted, userState);
        }
        
        private void OnGeterrMsgOperationCompleted(object arg) {
            if ((this.GeterrMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeterrMsgCompleted(this, new GeterrMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/SendMail", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail(string mailto, string mailcc, string mailBcc, string mfrom, string Subject, string Bodys) {
            object[] results = this.Invoke("SendMail", new object[] {
                        mailto,
                        mailcc,
                        mailBcc,
                        mfrom,
                        Subject,
                        Bodys});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailAsync(string mailto, string mailcc, string mailBcc, string mfrom, string Subject, string Bodys) {
            this.SendMailAsync(mailto, mailcc, mailBcc, mfrom, Subject, Bodys, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string mailto, string mailcc, string mailBcc, string mfrom, string Subject, string Bodys, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        mailto,
                        mailcc,
                        mailBcc,
                        mfrom,
                        Subject,
                        Bodys}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/SendMailAttached", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMailAttached(string mailto, string mailcc, string mfrom, string Subject, string Bodys, byte[][] fileBuffer, string[] fileName) {
            object[] results = this.Invoke("SendMailAttached", new object[] {
                        mailto,
                        mailcc,
                        mfrom,
                        Subject,
                        Bodys,
                        fileBuffer,
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailAttachedAsync(string mailto, string mailcc, string mfrom, string Subject, string Bodys, byte[][] fileBuffer, string[] fileName) {
            this.SendMailAttachedAsync(mailto, mailcc, mfrom, Subject, Bodys, fileBuffer, fileName, null);
        }
        
        /// <remarks/>
        public void SendMailAttachedAsync(string mailto, string mailcc, string mfrom, string Subject, string Bodys, byte[][] fileBuffer, string[] fileName, object userState) {
            if ((this.SendMailAttachedOperationCompleted == null)) {
                this.SendMailAttachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailAttachedOperationCompleted);
            }
            this.InvokeAsync("SendMailAttached", new object[] {
                        mailto,
                        mailcc,
                        mfrom,
                        Subject,
                        Bodys,
                        fileBuffer,
                        fileName}, this.SendMailAttachedOperationCompleted, userState);
        }
        
        private void OnSendMailAttachedOperationCompleted(object arg) {
            if ((this.SendMailAttachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailAttachedCompleted(this, new SendMailAttachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/SendMailDelay", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMailDelay(string mailto, string mailcc, string mailBcc, string mfrom, string Subject, string bodys, string system) {
            object[] results = this.Invoke("SendMailDelay", new object[] {
                        mailto,
                        mailcc,
                        mailBcc,
                        mfrom,
                        Subject,
                        bodys,
                        system});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailDelayAsync(string mailto, string mailcc, string mailBcc, string mfrom, string Subject, string bodys, string system) {
            this.SendMailDelayAsync(mailto, mailcc, mailBcc, mfrom, Subject, bodys, system, null);
        }
        
        /// <remarks/>
        public void SendMailDelayAsync(string mailto, string mailcc, string mailBcc, string mfrom, string Subject, string bodys, string system, object userState) {
            if ((this.SendMailDelayOperationCompleted == null)) {
                this.SendMailDelayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailDelayOperationCompleted);
            }
            this.InvokeAsync("SendMailDelay", new object[] {
                        mailto,
                        mailcc,
                        mailBcc,
                        mfrom,
                        Subject,
                        bodys,
                        system}, this.SendMailDelayOperationCompleted, userState);
        }
        
        private void OnSendMailDelayOperationCompleted(object arg) {
            if ((this.SendMailDelayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailDelayCompleted(this, new SendMailDelayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/QueryMailInfo", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryMailInfo(string system, string datefrom, string dateto) {
            object[] results = this.Invoke("QueryMailInfo", new object[] {
                        system,
                        datefrom,
                        dateto});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMailInfoAsync(string system, string datefrom, string dateto) {
            this.QueryMailInfoAsync(system, datefrom, dateto, null);
        }
        
        /// <remarks/>
        public void QueryMailInfoAsync(string system, string datefrom, string dateto, object userState) {
            if ((this.QueryMailInfoOperationCompleted == null)) {
                this.QueryMailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMailInfoOperationCompleted);
            }
            this.InvokeAsync("QueryMailInfo", new object[] {
                        system,
                        datefrom,
                        dateto}, this.QueryMailInfoOperationCompleted, userState);
        }
        
        private void OnQueryMailInfoOperationCompleted(object arg) {
            if ((this.QueryMailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMailInfoCompleted(this, new QueryMailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/SendMailWithOptions", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMailWithOptions(string to, string cc, string from, string subject, string content, byte[][] fileBuffer, string[] fileName) {
            object[] results = this.Invoke("SendMailWithOptions", new object[] {
                        to,
                        cc,
                        from,
                        subject,
                        content,
                        fileBuffer,
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailWithOptionsAsync(string to, string cc, string from, string subject, string content, byte[][] fileBuffer, string[] fileName) {
            this.SendMailWithOptionsAsync(to, cc, from, subject, content, fileBuffer, fileName, null);
        }
        
        /// <remarks/>
        public void SendMailWithOptionsAsync(string to, string cc, string from, string subject, string content, byte[][] fileBuffer, string[] fileName, object userState) {
            if ((this.SendMailWithOptionsOperationCompleted == null)) {
                this.SendMailWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailWithOptionsOperationCompleted);
            }
            this.InvokeAsync("SendMailWithOptions", new object[] {
                        to,
                        cc,
                        from,
                        subject,
                        content,
                        fileBuffer,
                        fileName}, this.SendMailWithOptionsOperationCompleted, userState);
        }
        
        private void OnSendMailWithOptionsOperationCompleted(object arg) {
            if ((this.SendMailWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailWithOptionsCompleted(this, new SendMailWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cfag.port.com/TestOptions", RequestNamespace="http://cfag.port.com/", ResponseNamespace="http://cfag.port.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestOptions(string to, string cc, string from, string subject, string content) {
            object[] results = this.Invoke("TestOptions", new object[] {
                        to,
                        cc,
                        from,
                        subject,
                        content});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestOptionsAsync(string to, string cc, string from, string subject, string content) {
            this.TestOptionsAsync(to, cc, from, subject, content, null);
        }
        
        /// <remarks/>
        public void TestOptionsAsync(string to, string cc, string from, string subject, string content, object userState) {
            if ((this.TestOptionsOperationCompleted == null)) {
                this.TestOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOptionsOperationCompleted);
            }
            this.InvokeAsync("TestOptions", new object[] {
                        to,
                        cc,
                        from,
                        subject,
                        content}, this.TestOptionsOperationCompleted, userState);
        }
        
        private void OnTestOptionsOperationCompleted(object arg) {
            if ((this.TestOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestOptionsCompleted(this, new TestOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GeterrMsgCompletedEventHandler(object sender, GeterrMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeterrMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeterrMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendMailAttachedCompletedEventHandler(object sender, SendMailAttachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailAttachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailAttachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendMailDelayCompletedEventHandler(object sender, SendMailDelayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailDelayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailDelayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryMailInfoCompletedEventHandler(object sender, QueryMailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendMailWithOptionsCompletedEventHandler(object sender, SendMailWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TestOptionsCompletedEventHandler(object sender, TestOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591